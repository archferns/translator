# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:3.0.0-node
        environment:
          BUNDLER_VERSION: 2.0.2
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: translator
          PGPASSWORD: password
      - image: postgres:9.5
        environment:
          POSTGRES_USER: translator
          POSTGRES_DB: translator_test
          POSTGRES_PASSWORD: password

    working_directory: ~/translator

    steps:
      - checkout

      # Setup bundler 2+
      - run:
          name: setup bundler
          command: |
            gem install bundler -N

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=8 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # run webpacker
      - run: bundle exec rails assets:precompile
      # Database setup
      - run: bundle exec rake db:create db:schema:load
      # run rubocop!
      - run:
          name: Rubocop
          command: bundle exec rubocop
      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/*/_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
